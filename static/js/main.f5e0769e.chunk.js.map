{"version":3,"sources":["lib/styleUtils.ts","components/Header.tsx","images/choose/aim.jpg","components/utils/SceneInOut.tsx","components/chooseCharacter/CharacterCard.tsx","components/chooseCharacter/ChooseCharacter.tsx","components/aim/Aim.tsx","App.tsx","index.tsx"],"names":["createSpaceSize","multiple","BREAK_POINT","StyledContainer","styled","div","StyledTitleContainer","theme","thinner","StyledTitle","h1","thin","isLink","StyledConnectingText","p","thick","StyledCharacterName","StyledRightContainer","StyledCopyright","baseTheme","StyledCopyrightIcon","span","Header","characterName","onPressTitle","onClick","styledContainerProps","readyToHide","readyToShow","SceneInOut","onSceneIn","onSceneOut","children","useState","setReadyToShow","useEffect","calledOnSceneIn","useRef","calledOnSceneOut","onTransitionEnd","current","CARD_WIDTH_FOR_PC","StyledCard","isComingSoon","StyledComingSoon","StyledImageInCard","img","leftRatio","isHover","selected","BORDER_PROPERTIES","StyledBorderInCardLeft","characterTheme","StyledBorderInCardRight","StyledBorderInCardTop","StyledBorderInCardBottom","StyledSelectedCenteringContainer","fadeInOut","keyframes","StyledSelectedContainer","StyledSelectedIcon","CheckCircle","StyledSelectedLabel","CharacterCard","props","setHover","setSelected","shouldHighlight","showTimer","setTimeout","highlightDelay","hideTimer","clearTimeout","onSelected","htmlImgProperties","onMouseOver","onMouseLeave","onAnimationEnd","width","height","StyledCardContainer","ChooseCharacter","setShouldHighlight","setReadyToHide","selectedCharacter","themeAim","src","imageAim","alt","StyledBodyContainer","readyToStartAnimation","StyledBodyScrollContainer","StyledMenu","ul","StyledMenuItem","li","isActive","StyledWord","StyledProfile","StyledProfileItem","StyledCharacterContainer","StyledCharacterImage","MENUS","Aim","backToChoice","onSceneOutForBackToChoice","setReadyToStartAnimation","currentMenu","setCurrentMenu","map","menu","GlobalStyle","createGlobalStyle","CHARACTER_THEMES","aim","aimTheme","getCharacterName","scene","App","setTheme","setScene","setBackToChoice","character","renderApp","ReactDOM","render","StrictMode","document","getElementById","startLoadingTime","Date","now","window","addEventListener","loading","querySelector","style","opacity","remove","Math","max"],"mappings":"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","file":"static/js/main.f5e0769e.chunk.js","sourcesContent":["export const SIZE_FONT_XX_LARGE = 24;\nexport const SIZE_FONT_LARGE = 18;\nexport const SIZE_FONT_MEDIUM = 16;\nexport const SIZE_FONT_SMALL = 14;\nexport const SIZE_FONT_MINIMUM = 12;\n\nexport const MINIMUM_PIXEL_UNIT = 8;\n\nexport const createSpaceSize = (multiple: number) =>\n  multiple * MINIMUM_PIXEL_UNIT;\n\nexport const convertHexToRGB = (hex: string, alpha?: number) => {\n  const r = parseInt(hex.slice(1, 3), 16);\n  const g = parseInt(hex.slice(3, 5), 16);\n  const b = parseInt(hex.slice(5, 7), 16);\n  if (alpha) {\n    return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n  } else {\n    return `rgb(${r}, ${g}, ${b})`;\n  }\n};\n\nexport const BREAK_POINT = 599;\nexport const HEADER_HEIGHT_FOR_PC = 9 * MINIMUM_PIXEL_UNIT;\nexport const HEADER_HEIGHT_FOR_SP = 6 * MINIMUM_PIXEL_UNIT;\n","import React from 'react';\nimport styled from 'styled-components';\nimport baseTheme from '../theme/gray.json';\nimport {\n  BREAK_POINT,\n  createSpaceSize,\n  HEADER_HEIGHT_FOR_PC,\n  HEADER_HEIGHT_FOR_SP,\n  SIZE_FONT_LARGE,\n  SIZE_FONT_MINIMUM,\n  SIZE_FONT_SMALL,\n} from '../lib/styleUtils';\n\nconst StyledContainer = styled.div`\n  position: relative;\n`;\n\nconst StyledTitleContainer = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: ${({ theme }) => theme.thinner};\n`;\n\ntype StyledTitleProps = { isLink: boolean };\nconst StyledTitle = styled.h1<StyledTitleProps>`\n  height: ${HEADER_HEIGHT_FOR_PC}px;\n  line-height: ${HEADER_HEIGHT_FOR_PC}px;\n  padding-left: ${createSpaceSize(3)}px;\n  color: ${({ theme }) => theme.thin};\n  font-size: ${SIZE_FONT_LARGE}px;\n  font-weight: normal;\n  cursor: ${({ isLink }) => (isLink ? 'pointer' : 'default')};\n  transition: all 600ms ease-out;\n  transition-property: background-color, color;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    height: ${HEADER_HEIGHT_FOR_SP}px;\n    line-height: ${HEADER_HEIGHT_FOR_SP}px;\n    padding-left: ${createSpaceSize(2)}px;\n    font-size: ${SIZE_FONT_SMALL}px;\n  }\n`;\n\nconst StyledConnectingText = styled.p`\n  margin: 0 ${createSpaceSize(2)}px;\n  color: ${({ theme }) => theme.thick};\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    font-size: ${SIZE_FONT_SMALL}px;\n  }\n`;\n\nconst StyledCharacterName = styled.p`\n  color: ${({ theme }) => theme.thick};\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    font-size: ${SIZE_FONT_SMALL}px;\n  }\n`;\n\nconst StyledRightContainer = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  padding: 0 ${createSpaceSize(3)}px;\n`;\n\nconst StyledCopyright = styled.p`\n  color: ${baseTheme.thin};\n  font-size: ${SIZE_FONT_SMALL}px;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    font-size: ${SIZE_FONT_MINIMUM}px;\n  }\n`;\n\nconst StyledCopyrightIcon = styled.span`\n  font-size: ${SIZE_FONT_LARGE}px;\n  vertical-align: middle;\n`;\n\ntype Props = { characterName?: string; onPressTitle: () => void };\n\nconst Header: React.FC<Props> = ({ characterName, onPressTitle }) => (\n  <StyledContainer>\n    <StyledTitleContainer>\n      <StyledTitle\n        isLink={!!characterName}\n        onClick={() => !!characterName && onPressTitle()}\n      >\n        オリ嫁ブランディング\n      </StyledTitle>\n      {characterName && (\n        <>\n          <StyledConnectingText>&gt;</StyledConnectingText>\n          <StyledCharacterName>{characterName}</StyledCharacterName>\n        </>\n      )}\n    </StyledTitleContainer>\n    <StyledRightContainer>\n      <StyledCopyright>\n        <StyledCopyrightIcon>&copy;</StyledCopyrightIcon> 2021 nkzttt\n      </StyledCopyright>\n    </StyledRightContainer>\n  </StyledContainer>\n);\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/aim.5536ca15.jpg\";","import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { BREAK_POINT } from '../../lib/styleUtils';\n\ntype StyledContainerProps = { readyToShow?: boolean; readyToHide?: boolean };\nconst getOpacity = (styledContainerProps: StyledContainerProps) => {\n  if (styledContainerProps.readyToHide) return 0;\n  if (styledContainerProps.readyToShow) return 1;\n  return 0;\n};\nconst getScale = (styledContainerProps: StyledContainerProps) => {\n  if (styledContainerProps.readyToHide) return 1.05;\n  if (styledContainerProps.readyToShow) return 1;\n  return 1.05;\n};\nconst StyledContainer = styled.div<StyledContainerProps>`\n  width: 100%;\n  opacity: ${getOpacity};\n  transform: scale(${getScale});\n  transition: all 600ms ease-out;\n  transition-property: opacity, transform;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    transform: none;\n  }\n`;\n\ntype Props = {\n  readyToHide?: boolean;\n  onSceneIn?: () => void;\n  onSceneOut?: () => void;\n};\nconst SceneInOut: React.FC<Props> = ({\n  readyToHide,\n  onSceneIn,\n  onSceneOut,\n  children,\n}) => {\n  const [readyToShow, setReadyToShow] = useState(false);\n  useEffect(() => setReadyToShow(true), []);\n  const calledOnSceneIn = useRef<boolean>(false);\n  const calledOnSceneOut = useRef<boolean>(false);\n  return (\n    <StyledContainer\n      readyToShow={readyToShow}\n      readyToHide={readyToHide}\n      onTransitionEnd={() => {\n        if (readyToShow && !calledOnSceneIn.current) {\n          calledOnSceneIn.current = true;\n          onSceneIn && onSceneIn();\n        }\n        if (readyToHide && !calledOnSceneOut.current) {\n          calledOnSceneOut.current = true;\n          onSceneOut && onSceneOut();\n        }\n      }}\n    >\n      {children}\n    </StyledContainer>\n  );\n};\n\nexport default SceneInOut;\n","import React, { useEffect, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { CheckCircle } from '@styled-icons/boxicons-regular/CheckCircle';\nimport baseTheme from '../../theme/gray.json';\nimport {\n  BREAK_POINT,\n  createSpaceSize,\n  SIZE_FONT_XX_LARGE,\n} from '../../lib/styleUtils';\n\ntype Theme = typeof baseTheme;\n\nconst CARD_WIDTH_FOR_PC = 150;\ntype StyledCardProps = { isComingSoon?: boolean };\nconst StyledCard = styled.div<StyledCardProps>`\n  width: ${CARD_WIDTH_FOR_PC}px;\n  height: 500px;\n  position: relative;\n  margin: 0 ${createSpaceSize(3)}px;\n  background-color: ${baseTheme.thinner};\n  cursor: ${({ isComingSoon }) => (isComingSoon ? 'auto' : 'pointer')};\n  overflow: hidden;\n  &:first-child {\n    box-shadow: rgba(0, 0, 0, 0.05) -${CARD_WIDTH_FOR_PC + createSpaceSize(6)}px\n        0,\n      rgba(0, 0, 0, 0.03) -${(CARD_WIDTH_FOR_PC + createSpaceSize(6)) * 2}px 0,\n      rgba(0, 0, 0, 0.02) -${(CARD_WIDTH_FOR_PC + createSpaceSize(6)) * 3}px 0;\n  }\n  &:last-child {\n    box-shadow: rgba(0, 0, 0, 0.05) ${CARD_WIDTH_FOR_PC + createSpaceSize(6)}px\n        0,\n      rgba(0, 0, 0, 0.03) ${(CARD_WIDTH_FOR_PC + createSpaceSize(6)) * 2}px 0,\n      rgba(0, 0, 0, 0.02) ${(CARD_WIDTH_FOR_PC + createSpaceSize(6)) * 3}px 0;\n  }\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    width: 50%;\n    height: 50%;\n    margin: 0;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    &:first-child,\n    &:last-child {\n      box-shadow: none;\n    }\n  }\n`;\n\nconst StyledComingSoon = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n  color: ${baseTheme.thin};\n  font-size: ${SIZE_FONT_XX_LARGE}px;\n  text-align: center;\n  transform: rotate(-20deg);\n`;\n\ntype StyledImageInCardProps = {\n  leftRatio: [forPc: number, forSp: number];\n  isHover: boolean;\n  selected: boolean;\n};\nconst StyledImageInCard = styled.img<StyledImageInCardProps>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: auto;\n  height: 100%;\n  transform: translateX(${({ leftRatio }) => leftRatio[0]}%);\n  filter: grayscale(\n    ${({ isHover, selected }) => (isHover || selected ? 0 : 1)}\n  );\n  transition: filter 350ms linear;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    transform: translateX(${({ leftRatio }) => leftRatio[1]}%);\n  }\n`;\n\nconst BORDER_PROPERTIES = {\n  size: 3,\n  transitionTime: 500,\n};\ntype StyledBorderInCardProps = {\n  characterTheme: Theme;\n  isHover: boolean;\n  selected: boolean;\n};\nconst StyledBorderInCardLeft = styled.div<StyledBorderInCardProps>`\n  width: ${BORDER_PROPERTIES.size}px;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: ${({ characterTheme, isHover }) =>\n    (isHover ? characterTheme : baseTheme).thick};\n  transform: translateY(\n    ${({ isHover, selected }) => (isHover || selected ? -100 : 100)}%\n  );\n  transition: transform ${BORDER_PROPERTIES.transitionTime}ms linear;\n`;\nconst StyledBorderInCardRight = styled.div<StyledBorderInCardProps>`\n  width: ${BORDER_PROPERTIES.size}px;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  right: 0;\n  background-color: ${({ characterTheme, isHover }) =>\n    (isHover ? characterTheme : baseTheme).thick};\n  transform: translateY(\n    ${({ isHover, selected }) => (isHover || selected ? 100 : -100)}%\n  );\n  transition: transform ${BORDER_PROPERTIES.transitionTime}ms linear;\n`;\nconst StyledBorderInCardTop = styled.div<StyledBorderInCardProps>`\n  width: 100%;\n  height: ${BORDER_PROPERTIES.size}px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: ${({ characterTheme, isHover }) =>\n    (isHover ? characterTheme : baseTheme).thick};\n  transform: translateX(\n    ${({ isHover, selected }) => (isHover || selected ? 100 : -100)}%\n  );\n  transition: transform ${BORDER_PROPERTIES.transitionTime}ms linear;\n`;\nconst StyledBorderInCardBottom = styled.div<StyledBorderInCardProps>`\n  width: 100%;\n  height: ${BORDER_PROPERTIES.size}px;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  background-color: ${({ characterTheme, isHover }) =>\n    (isHover ? characterTheme : baseTheme).thick};\n  transform: translateX(\n    ${({ isHover, selected }) => (isHover || selected ? -100 : 100)}%\n  );\n  transition: transform ${BORDER_PROPERTIES.transitionTime}ms linear;\n`;\n\nconst StyledSelectedCenteringContainer = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst fadeInOut = keyframes`\n  0% {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  33%, 66% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n  100% {\n    opacity: 0;\n    transform: translateY(-30px);\n  }\n`;\nconst StyledSelectedContainer = styled.div`\n  text-align: center;\n  opacity: 0;\n  animation: ${fadeInOut} 1200ms ease-in-out forwards;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    animation-delay: 500ms;\n  }\n`;\ntype StyledSelectedIconProps = { characterTheme: Theme };\nconst StyledSelectedIcon = styled(CheckCircle)<StyledSelectedIconProps>`\n  margin: 0 auto;\n  color: ${({ characterTheme }) => characterTheme.thinner};\n  filter: drop-shadow(0 0 3px ${({ characterTheme }) => characterTheme.thin});\n`;\ntype StyledSelectedLabelProps = { characterTheme: Theme };\nconst StyledSelectedLabel = styled.p<StyledSelectedLabelProps>`\n  color: ${({ characterTheme }) => characterTheme.thinner};\n  font-size: ${SIZE_FONT_XX_LARGE}px;\n  filter: drop-shadow(0 0 3px ${({ characterTheme }) => characterTheme.thin});\n`;\n\ntype Props =\n  | { isComingSoon: true }\n  | (React.ImgHTMLAttributes<HTMLImageElement> & {\n      leftRatio: [forPc: number, forSp: number];\n      characterTheme: Theme;\n      onSelected: () => void;\n      shouldHighlight?: boolean;\n      highlightDelay?: number;\n    });\nconst CharacterCard: React.FC<Props> = (props) => {\n  const [isHover, setHover] = useState(false);\n  const [selected, setSelected] = useState(false);\n  useEffect(() => {\n    if ('isComingSoon' in props) return;\n    if (!props.shouldHighlight) return;\n    const showTimer = setTimeout(\n      () => setHover(true),\n      props.highlightDelay || 0\n    );\n    const hideTimer = setTimeout(\n      () => setHover(false),\n      (props.highlightDelay || 0) + BORDER_PROPERTIES.transitionTime + 100\n    );\n    return () => {\n      clearTimeout(showTimer);\n      clearTimeout(hideTimer);\n    };\n  }, [props]);\n  if ('isComingSoon' in props) {\n    return (\n      <StyledCard isComingSoon>\n        <StyledComingSoon>\n          <p>coming soon</p>\n        </StyledComingSoon>\n      </StyledCard>\n    );\n  }\n  const { leftRatio, characterTheme, onSelected, ...htmlImgProperties } = props;\n  return (\n    <StyledCard\n      onMouseOver={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n      onClick={() => setSelected(true)}\n    >\n      <StyledImageInCard\n        {...htmlImgProperties}\n        leftRatio={leftRatio}\n        isHover={isHover}\n        selected={selected}\n      />\n      <StyledBorderInCardLeft\n        characterTheme={characterTheme}\n        isHover={isHover}\n        selected={selected}\n      />\n      <StyledBorderInCardRight\n        characterTheme={characterTheme}\n        isHover={isHover}\n        selected={selected}\n      />\n      <StyledBorderInCardTop\n        characterTheme={characterTheme}\n        isHover={isHover}\n        selected={selected}\n      />\n      <StyledBorderInCardBottom\n        characterTheme={characterTheme}\n        isHover={isHover}\n        selected={selected}\n      />\n      {selected && (\n        <StyledSelectedCenteringContainer>\n          <StyledSelectedContainer onAnimationEnd={onSelected}>\n            <StyledSelectedIcon\n              characterTheme={characterTheme}\n              width={50}\n              height={50}\n            />\n            <StyledSelectedLabel characterTheme={characterTheme}>\n              selected\n            </StyledSelectedLabel>\n          </StyledSelectedContainer>\n        </StyledSelectedCenteringContainer>\n      )}\n    </StyledCard>\n  );\n};\n\nexport default CharacterCard;\n","import React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  BREAK_POINT,\n  createSpaceSize,\n  HEADER_HEIGHT_FOR_SP,\n} from '../../lib/styleUtils';\nimport themeAim from '../../theme/aim.json';\nimport imageAim from '../../images/choose/aim.jpg';\nimport SceneInOut from '../utils/SceneInOut';\nimport CharacterCard from './CharacterCard';\n\nconst StyledContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-top: ${createSpaceSize(5)}px;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    height: calc(100vh - ${HEADER_HEIGHT_FOR_SP}px);\n    padding-top: 0;\n  }\n`;\n\nconst StyledCardContainer = styled.div`\n  display: flex;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    flex-wrap: wrap;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\ntype CHARACTER = 'aim';\n\ntype Props = {\n  onSelected: (character: CHARACTER) => void;\n};\nconst ChooseCharacter: React.FC<Props> = ({ onSelected }) => {\n  const [shouldHighlight, setShouldHighlight] = useState(false);\n  const [readyToHide, setReadyToHide] = useState(false);\n  const selectedCharacter = useRef<CHARACTER | null>(null);\n  return (\n    <SceneInOut\n      readyToHide={!!selectedCharacter.current && readyToHide}\n      onSceneIn={() => setShouldHighlight(true)}\n      onSceneOut={() =>\n        selectedCharacter.current && onSelected(selectedCharacter.current)\n      }\n    >\n      <StyledContainer>\n        <StyledCardContainer>\n          <CharacterCard\n            leftRatio={[-35, -12]}\n            characterTheme={themeAim}\n            onSelected={() => {\n              setReadyToHide(true);\n              selectedCharacter.current = 'aim';\n            }}\n            src={imageAim}\n            alt=\"愛夢\"\n            shouldHighlight={shouldHighlight}\n          />\n          <CharacterCard isComingSoon />\n          <CharacterCard isComingSoon />\n        </StyledCardContainer>\n      </StyledContainer>\n    </SceneInOut>\n  );\n};\n\nexport default ChooseCharacter;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  BREAK_POINT,\n  createSpaceSize,\n  HEADER_HEIGHT_FOR_PC,\n  HEADER_HEIGHT_FOR_SP,\n  MINIMUM_PIXEL_UNIT,\n  SIZE_FONT_LARGE,\n  SIZE_FONT_SMALL,\n  SIZE_FONT_XX_LARGE,\n} from '../../lib/styleUtils';\nimport imageAim from '../../images/choose/aim.jpg';\nimport SceneInOut from '../utils/SceneInOut';\n\nconst StyledContainer = styled.div`\n  width: 100%;\n  height: calc(100vh - ${HEADER_HEIGHT_FOR_PC}px);\n  position: relative;\n  background-color: ${({ theme }) => theme.thinner};\n  color: ${({ theme }) => theme.thick};\n  overflow: hidden;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    height: calc(100vh - ${HEADER_HEIGHT_FOR_SP}px);\n    padding-top: 0;\n  }\n`;\n\ntype StyledBodyContainerProps = { readyToStartAnimation: boolean };\nconst StyledBodyContainer = styled.div<StyledBodyContainerProps>`\n  width: 50%;\n  height: 100%;\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  margin: 0 auto;\n  padding: ${createSpaceSize(3)}px;\n  padding-top: 0;\n  opacity: ${({ readyToStartAnimation }) => (readyToStartAnimation ? 1 : 0)};\n  transform: translateX(\n    ${({ readyToStartAnimation }) => (readyToStartAnimation ? 50 : 0)}%\n  );\n  transition: all 600ms ease-out;\n  transition-property: opacity, transform;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    width: 100%;\n    z-index: 1;\n    padding: ${createSpaceSize(2)}px ${createSpaceSize(2)}px\n      ${createSpaceSize(3)}px;\n    transform: translateX(0);\n    opacity: ${({ readyToStartAnimation }) => (readyToStartAnimation ? 1 : 0)};\n    transition: opacity 600ms ease-out;\n  }\n`;\n\nconst StyledBodyScrollContainer = styled.div`\n  height: 100%;\n  overflow: scroll;\n  &::-webkit-scrollbar {\n    -webkit-appearance: none;\n  }\n  &::-webkit-scrollbar-corner {\n    display: none;\n  }\n  &::-webkit-scrollbar:vertical {\n    width: ${MINIMUM_PIXEL_UNIT}px;\n  }\n  &::-webkit-scrollbar-thumb {\n    border-radius: ${MINIMUM_PIXEL_UNIT}px;\n    background-color: ${({ theme }) => theme.thick};\n  }\n`;\n\nconst StyledMenu = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: ${-MINIMUM_PIXEL_UNIT}px;\n  margin-top: ${-MINIMUM_PIXEL_UNIT}px;\n  margin-bottom: ${createSpaceSize(3)}px;\n`;\ntype StyledMenuItemProps = { isActive: boolean };\nconst StyledMenuItem = styled.li<StyledMenuItemProps>`\n  height: ${createSpaceSize(5)}px;\n  line-height: ${createSpaceSize(5)}px;\n  border-radius: ${createSpaceSize(5) / 2}px;\n  margin-left: ${MINIMUM_PIXEL_UNIT}px;\n  margin-top: ${MINIMUM_PIXEL_UNIT}px;\n  padding: 0 ${createSpaceSize(5)}px;\n  border: solid 1px ${({ theme }) => theme.thin};\n  background-color: ${({ isActive, theme }) =>\n    theme[isActive ? 'thin' : 'thinner']};\n  color: ${({ isActive, theme }) => theme[isActive ? 'thinner' : 'thin']};\n  cursor: pointer;\n  transition: background-color 150ms linear;\n  &:hover {\n    background-color: ${({ theme }) => theme.thin};\n    color: ${({ theme }) => theme.thinner};\n  }\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    height: ${createSpaceSize(4)}px;\n    line-height: ${createSpaceSize(4)}px;\n    padding: 0 ${createSpaceSize(4)}px;\n    font-size: ${SIZE_FONT_SMALL}px;\n  }\n`;\n\nconst StyledWord = styled.p`\n  margin-bottom: ${createSpaceSize(3)}px;\n  font-size: ${SIZE_FONT_XX_LARGE}px;\n`;\nconst StyledProfile = styled.ul`\n  list-style: none;\n`;\nconst StyledProfileItem = styled.li`\n  margin-bottom: ${MINIMUM_PIXEL_UNIT}px;\n`;\n\ntype StyledCharacterContainerProps = { readyToStartAnimation: boolean };\nconst StyledCharacterContainer = styled.div<StyledCharacterContainerProps>`\n  width: 50%;\n  height: 100%;\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  margin: 0 auto;\n  transform: translateX(\n    ${({ readyToStartAnimation }) => (readyToStartAnimation ? -50 : 0)}%\n  );\n  transition: transform 600ms ease-out;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    width: 100%;\n    transform: translateX(0);\n    opacity: ${({ readyToStartAnimation }) =>\n      readyToStartAnimation ? 0.3 : 1};\n    transition: opacity 600ms ease-out;\n  }\n`;\nconst StyledCharacterImage = styled.img`\n  width: 100%;\n  height: auto;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    top: auto;\n    bottom: 0;\n  }\n`;\n\nconst MENUS = ['紹介', '活動', 'グッズ', 'ご支援'] as const;\n\ntype Props = { backToChoice: boolean; onSceneOutForBackToChoice: () => void };\n\nconst Aim: React.FC<Props> = ({ backToChoice, onSceneOutForBackToChoice }) => {\n  const [readyToStartAnimation, setReadyToStartAnimation] = useState(false);\n  const [currentMenu, setCurrentMenu] = useState<typeof MENUS[number]>('紹介');\n  return (\n    <SceneInOut\n      readyToHide={backToChoice}\n      onSceneIn={() => setTimeout(() => setReadyToStartAnimation(true), 600)}\n      onSceneOut={() => backToChoice && onSceneOutForBackToChoice()}\n    >\n      <StyledContainer>\n        <StyledBodyContainer readyToStartAnimation={readyToStartAnimation}>\n          <StyledBodyScrollContainer>\n            <StyledMenu>\n              {MENUS.map((menu) => (\n                <StyledMenuItem\n                  key={menu}\n                  isActive={currentMenu === menu}\n                  onClick={() => setCurrentMenu(menu)}\n                >\n                  {menu}\n                </StyledMenuItem>\n              ))}\n            </StyledMenu>\n            {currentMenu === '紹介' && (\n              <>\n                <StyledWord>「ありがとう。今日もお疲れ様でした。」</StyledWord>\n                <StyledProfile>\n                  <StyledProfileItem>\n                    名前：愛夢（あいむ / Aim）\n                  </StyledProfileItem>\n                  <StyledProfileItem>年齢：23歳</StyledProfileItem>\n                  <StyledProfileItem>\n                    トップ - アンダー：92 - 67（G）\n                  </StyledProfileItem>\n                </StyledProfile>\n              </>\n            )}\n            {currentMenu === '活動' && <p>大人の本、絶賛製作中！！</p>}\n            {currentMenu === 'グッズ' && (\n              <p>pixivFACTORY にて販売開始予定！！</p>\n            )}\n            {currentMenu === 'ご支援' && (\n              <p>pixivFANBOX にて愛夢応援専用プラン公開予定！！</p>\n            )}\n          </StyledBodyScrollContainer>\n        </StyledBodyContainer>\n        <StyledCharacterContainer readyToStartAnimation={readyToStartAnimation}>\n          <StyledCharacterImage src={imageAim} alt=\"愛夢\" />\n        </StyledCharacterContainer>\n      </StyledContainer>\n    </SceneInOut>\n  );\n};\n\nexport default Aim;\n","import React, { useState } from 'react';\nimport 'ress';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport baseTheme from './theme/gray.json';\nimport aimTheme from './theme/aim.json';\nimport Header from './components/Header';\nimport ChooseCharacter from './components/chooseCharacter/ChooseCharacter';\nimport Aim from './components/aim/Aim';\nimport { SIZE_FONT_MEDIUM } from './lib/styleUtils';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family:'ヒラギノ丸ゴ Pro W4','ヒラギノ丸ゴ Pro','Hiragino Maru Gothic Pro','ヒラギノ角ゴ Pro W3','Hiragino Kaku Gothic Pro','HG丸ｺﾞｼｯｸM-PRO','HGMaruGothicMPRO';\n    background-color: #f7f7f7;\n    color: ${baseTheme.thick};\n    font-size: ${SIZE_FONT_MEDIUM}px;\n  }\n`;\n\nconst CHARACTER_THEMES = {\n  aim: aimTheme,\n};\n\ntype Scene = 'choice' | 'aim';\n\nconst getCharacterName = (scene: Scene) => {\n  switch (scene) {\n    case 'aim':\n      return '愛夢';\n    case 'choice':\n      return undefined;\n  }\n};\n\nconst App: React.FC = () => {\n  const [theme, setTheme] = useState<typeof baseTheme>(baseTheme);\n  const [scene, setScene] = useState<Scene>('choice');\n  const [backToChoice, setBackToChoice] = useState(false);\n  return (\n    <div>\n      <GlobalStyle />\n      <ThemeProvider theme={theme}>\n        <Header\n          characterName={getCharacterName(scene)}\n          onPressTitle={() => {\n            setBackToChoice(true);\n          }}\n        />\n        {scene === 'choice' && (\n          <ChooseCharacter\n            onSelected={(character) => {\n              setTheme(CHARACTER_THEMES[character]);\n              setScene(character);\n            }}\n          />\n        )}\n        {scene === 'aim' && (\n          <Aim\n            backToChoice={backToChoice}\n            onSceneOutForBackToChoice={() => {\n              setTheme(baseTheme);\n              setScene('choice');\n              setBackToChoice(false);\n            }}\n          />\n        )}\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n};\n\n(() => {\n  const startLoadingTime = Date.now();\n  window.addEventListener('load', () => {\n    setTimeout(function () {\n      const loading = document.querySelector<HTMLDivElement>('#loading');\n      if (!loading) {\n        renderApp();\n        return;\n      }\n\n      loading.style.opacity = '0';\n      loading.addEventListener('transitionend', () => {\n        loading.remove();\n        renderApp();\n      });\n    }, Math.max(1000 - (Date.now() - startLoadingTime), 0));\n  });\n})();\n"],"sourceRoot":""}