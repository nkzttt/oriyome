{"version":3,"sources":["lib/styleUtils.ts","components/Header.tsx","images/choose/aim.jpg","components/chooseCharacter/CharacterCard.tsx","components/chooseCharacter/ChooseCharacter.tsx","App.tsx","index.tsx"],"names":["createSpaceSize","multiple","BREAK_POINT","StyledContainer","styled","div","StyledTitle","h1","theme","thin","StyledRightContainer","StyledCopyright","p","baseTheme","StyledCopyrightIcon","span","Header","CARD_WIDTH","StyledCard","thinner","isComingSoon","StyledComingSoon","StyledImageInCard","img","leftRatio","isHover","selected","BORDER_PROPERTIES","StyledBorderInCardLeft","characterTheme","thick","StyledBorderInCardRight","StyledBorderInCardTop","StyledBorderInCardBottom","StyledSelectedCenteringContainer","fadeInOut","keyframes","StyledSelectedContainer","StyledSelectedIcon","CheckCircle","StyledSelectedLabel","CharacterCard","props","useState","setHover","setSelected","onSelected","htmlImgProperties","onMouseOver","onMouseLeave","onClick","onAnimationEnd","width","height","readyToHide","StyledCardContainer","ChooseCharacter","setReadyToHide","selectedCharacter","useRef","calledOnSelected","current","onTransitionEnd","e","themeAim","src","imageAim","alt","GlobalStyle","createGlobalStyle","App","setTheme","scene","setScene","character","aimTheme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.941c7e4f.chunk.js","sourcesContent":["export const SIZE_FONT_XX_LARGE = 24;\nexport const SIZE_FONT_LARGE = 18;\nexport const SIZE_FONT_MEDIUM = 16;\nexport const SIZE_FONT_SMALL = 14;\nexport const SIZE_FONT_MINIMUM = 12;\n\nexport const MINIMUM_PIXEL_UNIT = 8;\n\nexport const createSpaceSize = (multiple: number) =>\n  multiple * MINIMUM_PIXEL_UNIT;\n\nexport const convertHexToRGB = (hex: string, alpha?: number) => {\n  const r = parseInt(hex.slice(1, 3), 16);\n  const g = parseInt(hex.slice(3, 5), 16);\n  const b = parseInt(hex.slice(5, 7), 16);\n  if (alpha) {\n    return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n  } else {\n    return `rgb(${r}, ${g}, ${b})`;\n  }\n};\n\nexport const BREAK_POINT = 599;\nexport const HEADER_HEIGHT_FOR_SP = 6 * MINIMUM_PIXEL_UNIT;\n","import React from 'react';\nimport 'ress';\nimport styled from 'styled-components';\nimport baseTheme from '../theme/gray.json';\nimport {\n  BREAK_POINT,\n  createSpaceSize,\n  HEADER_HEIGHT_FOR_SP,\n  SIZE_FONT_LARGE,\n  SIZE_FONT_MINIMUM,\n  SIZE_FONT_SMALL,\n} from '../lib/styleUtils';\n\nconst StyledContainer = styled.div`\n  position: relative;\n`;\n\nconst StyledTitle = styled.h1`\n  padding: ${createSpaceSize(3)}px;\n  border-bottom: solid 1px ${({ theme }) => theme.thin};\n  color: ${({ theme }) => theme.thin};\n  font-size: ${SIZE_FONT_LARGE}px;\n  font-weight: normal;\n  transition: all 600ms ease-out;\n  transition-property: border-bottom-color, color;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    height: ${HEADER_HEIGHT_FOR_SP}px;\n    line-height: ${HEADER_HEIGHT_FOR_SP}px;\n    padding: 0;\n    padding-left: ${createSpaceSize(2)}px;\n    font-size: ${SIZE_FONT_SMALL}px;\n  }\n`;\n\nconst StyledRightContainer = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  padding: 0 ${createSpaceSize(3)}px;\n`;\n\nconst StyledCopyright = styled.p`\n  color: ${baseTheme.thin};\n  font-size: ${SIZE_FONT_SMALL}px;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    font-size: ${SIZE_FONT_MINIMUM}px;\n  }\n`;\n\nconst StyledCopyrightIcon = styled.span`\n  font-size: ${SIZE_FONT_LARGE}px;\n  vertical-align: middle;\n`;\n\nconst Header: React.FC = () => (\n  <StyledContainer>\n    <StyledTitle>オリ嫁ブランディング</StyledTitle>\n    <StyledRightContainer>\n      <StyledCopyright>\n        <StyledCopyrightIcon>&copy;</StyledCopyrightIcon> 2021 nkzttt\n      </StyledCopyright>\n    </StyledRightContainer>\n  </StyledContainer>\n);\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/aim.5536ca15.jpg\";","import React, { useState } from 'react';\nimport 'ress';\nimport styled, { keyframes } from 'styled-components';\nimport { CheckCircle } from '@styled-icons/boxicons-regular/CheckCircle';\nimport baseTheme from '../../theme/gray.json';\nimport {\n  BREAK_POINT,\n  createSpaceSize,\n  SIZE_FONT_XX_LARGE,\n} from '../../lib/styleUtils';\n\ntype Theme = typeof baseTheme;\n\nconst CARD_WIDTH = 150;\ntype StyledCardProps = { isComingSoon?: boolean };\nconst StyledCard = styled.div<StyledCardProps>`\n  width: ${CARD_WIDTH}px;\n  height: 500px;\n  position: relative;\n  margin: 0 ${createSpaceSize(3)}px;\n  background-color: ${baseTheme.thinner};\n  cursor: ${({ isComingSoon }) => (isComingSoon ? 'auto' : 'pointer')};\n  overflow: hidden;\n  &:first-child {\n    box-shadow: rgba(0, 0, 0, 0.05) -${CARD_WIDTH + createSpaceSize(6)}px 0,\n      rgba(0, 0, 0, 0.03) -${(CARD_WIDTH + createSpaceSize(6)) * 2}px 0,\n      rgba(0, 0, 0, 0.02) -${(CARD_WIDTH + createSpaceSize(6)) * 3}px 0;\n  }\n  &:last-child {\n    box-shadow: rgba(0, 0, 0, 0.05) ${CARD_WIDTH + createSpaceSize(6)}px 0,\n      rgba(0, 0, 0, 0.03) ${(CARD_WIDTH + createSpaceSize(6)) * 2}px 0,\n      rgba(0, 0, 0, 0.02) ${(CARD_WIDTH + createSpaceSize(6)) * 3}px 0;\n  }\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    width: 33.333%;\n    height: 100%;\n    margin: 0;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    &:nth-child(3n) {\n      width: 33.334%;\n    }\n  }\n`;\n\nconst StyledComingSoon = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n  color: ${baseTheme.thin};\n  font-size: ${SIZE_FONT_XX_LARGE}px;\n  text-align: center;\n  transform: rotate(-20deg);\n`;\n\ntype StyledImageInCardProps = {\n  leftRatio: [forPc: number, forSp: number];\n  isHover: boolean;\n  selected: boolean;\n};\nconst StyledImageInCard = styled.img<StyledImageInCardProps>`\n  position: absolute;\n  top: 0;\n  left: ${({ leftRatio }) => leftRatio[0]}%;\n  width: auto;\n  height: 100%;\n  filter: grayscale(\n    ${({ isHover, selected }) => (isHover || selected ? 0 : 1)}\n  );\n  transition: filter 350ms linear;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    left: ${({ leftRatio }) => leftRatio[1]}%;\n  }\n`;\n\nconst BORDER_PROPERTIES = {\n  size: 3,\n  transitionTime: 500,\n};\ntype StyledBorderInCardProps = {\n  characterTheme: Theme;\n  isHover: boolean;\n  selected: boolean;\n};\nconst StyledBorderInCardLeft = styled.div<StyledBorderInCardProps>`\n  width: ${BORDER_PROPERTIES.size}px;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: ${({ characterTheme, isHover }) =>\n    (isHover ? characterTheme : baseTheme).thick};\n  transform: translateY(\n    ${({ isHover, selected }) => (isHover || selected ? -100 : 100)}%\n  );\n  transition: transform ${BORDER_PROPERTIES.transitionTime}ms linear;\n`;\nconst StyledBorderInCardRight = styled.div<StyledBorderInCardProps>`\n  width: ${BORDER_PROPERTIES.size}px;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  right: 0;\n  background-color: ${({ characterTheme, isHover }) =>\n    (isHover ? characterTheme : baseTheme).thick};\n  transform: translateY(\n    ${({ isHover, selected }) => (isHover || selected ? 100 : -100)}%\n  );\n  transition: transform ${BORDER_PROPERTIES.transitionTime}ms linear;\n`;\nconst StyledBorderInCardTop = styled.div<StyledBorderInCardProps>`\n  width: 100%;\n  height: ${BORDER_PROPERTIES.size}px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: ${({ characterTheme, isHover }) =>\n    (isHover ? characterTheme : baseTheme).thick};\n  transform: translateX(\n    ${({ isHover, selected }) => (isHover || selected ? 100 : -100)}%\n  );\n  transition: transform ${BORDER_PROPERTIES.transitionTime}ms linear;\n`;\nconst StyledBorderInCardBottom = styled.div<StyledBorderInCardProps>`\n  width: 100%;\n  height: ${BORDER_PROPERTIES.size}px;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  background-color: ${({ characterTheme, isHover }) =>\n    (isHover ? characterTheme : baseTheme).thick};\n  transform: translateX(\n    ${({ isHover, selected }) => (isHover || selected ? -100 : 100)}%\n  );\n  transition: transform ${BORDER_PROPERTIES.transitionTime}ms linear;\n`;\n\nconst StyledSelectedCenteringContainer = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst fadeInOut = keyframes`\n  0% {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  33%, 66% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n  100% {\n    opacity: 0;\n    transform: translateY(-30px);\n  }\n`;\nconst StyledSelectedContainer = styled.div`\n  text-align: center;\n  opacity: 0;\n  animation: ${fadeInOut} 1200ms ease-in-out forwards;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    animation-delay: 500ms;\n  }\n`;\ntype StyledSelectedIconProps = { characterTheme: Theme };\nconst StyledSelectedIcon = styled(CheckCircle)<StyledSelectedIconProps>`\n  margin: 0 auto;\n  color: ${({ characterTheme }) => characterTheme.thinner};\n  filter: drop-shadow(0 0 3px ${({ characterTheme }) => characterTheme.thin});\n`;\ntype StyledSelectedLabelProps = { characterTheme: Theme };\nconst StyledSelectedLabel = styled.p<StyledSelectedLabelProps>`\n  color: ${({ characterTheme }) => characterTheme.thinner};\n  font-size: ${SIZE_FONT_XX_LARGE}px;\n  filter: drop-shadow(0 0 3px ${({ characterTheme }) => characterTheme.thin});\n`;\n\ntype Props =\n  | { isComingSoon: true }\n  | (React.ImgHTMLAttributes<HTMLImageElement> & {\n      leftRatio: [forPc: number, forSp: number];\n      characterTheme: Theme;\n      onSelected: () => void;\n    });\nconst CharacterCard: React.FC<Props> = (props) => {\n  const [isHover, setHover] = useState(false);\n  const [selected, setSelected] = useState(false);\n  if ('isComingSoon' in props) {\n    return (\n      <StyledCard isComingSoon>\n        <StyledComingSoon>\n          <p>coming soon</p>\n        </StyledComingSoon>\n      </StyledCard>\n    );\n  }\n  const { leftRatio, characterTheme, onSelected, ...htmlImgProperties } = props;\n  return (\n    <StyledCard\n      onMouseOver={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n      onClick={() => setSelected(true)}\n    >\n      <StyledImageInCard\n        {...htmlImgProperties}\n        leftRatio={leftRatio}\n        isHover={isHover}\n        selected={selected}\n      />\n      <StyledBorderInCardLeft\n        characterTheme={characterTheme}\n        isHover={isHover}\n        selected={selected}\n      />\n      <StyledBorderInCardRight\n        characterTheme={characterTheme}\n        isHover={isHover}\n        selected={selected}\n      />\n      <StyledBorderInCardTop\n        characterTheme={characterTheme}\n        isHover={isHover}\n        selected={selected}\n      />\n      <StyledBorderInCardBottom\n        characterTheme={characterTheme}\n        isHover={isHover}\n        selected={selected}\n      />\n      {selected && (\n        <StyledSelectedCenteringContainer>\n          <StyledSelectedContainer onAnimationEnd={onSelected}>\n            <StyledSelectedIcon\n              characterTheme={characterTheme}\n              width={50}\n              height={50}\n            />\n            <StyledSelectedLabel characterTheme={characterTheme}>\n              selected\n            </StyledSelectedLabel>\n          </StyledSelectedContainer>\n        </StyledSelectedCenteringContainer>\n      )}\n    </StyledCard>\n  );\n};\n\nexport default CharacterCard;\n","import React, { useRef, useState } from 'react';\nimport 'ress';\nimport styled from 'styled-components';\nimport {\n  BREAK_POINT,\n  createSpaceSize,\n  HEADER_HEIGHT_FOR_SP,\n} from '../../lib/styleUtils';\nimport themeAim from '../../theme/aim.json';\nimport imageAim from '../../images/choose/aim.jpg';\nimport CharacterCard from './CharacterCard';\n\ntype StyledContainerProps = { readyToHide: boolean };\nconst StyledContainer = styled.div<StyledContainerProps>`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-top: ${createSpaceSize(5)}px;\n  opacity: ${({ readyToHide }) => (readyToHide ? 0 : 1)};\n  transform: scale(${({ readyToHide }) => (readyToHide ? 1.05 : 1)});\n  transition: all 600ms ease-out;\n  transition-property: opacity, transform;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    height: calc(100vh - ${HEADER_HEIGHT_FOR_SP}px);\n    padding-top: 0;\n  }\n`;\n\nconst StyledCardContainer = styled.div`\n  display: flex;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\ntype CHARACTER = 'aim';\n\ntype Props = {\n  onSelected: (character: CHARACTER) => void;\n};\nconst ChooseCharacter: React.FC<Props> = ({ onSelected }) => {\n  const [readyToHide, setReadyToHide] = useState(false);\n  const selectedCharacter = useRef<CHARACTER | null>(null);\n  const calledOnSelected = useRef<boolean>(false);\n  return (\n    <StyledContainer\n      readyToHide={!!selectedCharacter.current && readyToHide}\n      onTransitionEnd={(e) => {\n        if (!readyToHide || calledOnSelected.current) return;\n        selectedCharacter.current && onSelected(selectedCharacter.current);\n        calledOnSelected.current = true;\n      }}\n    >\n      <StyledCardContainer>\n        <CharacterCard\n          leftRatio={[-80, -156]}\n          characterTheme={themeAim}\n          onSelected={() => {\n            setReadyToHide(true);\n            selectedCharacter.current = 'aim';\n          }}\n          src={imageAim}\n          alt=\"愛夢\"\n        />\n        <CharacterCard isComingSoon />\n        <CharacterCard isComingSoon />\n      </StyledCardContainer>\n    </StyledContainer>\n  );\n};\n\nexport default ChooseCharacter;\n","import React, { useState } from 'react';\nimport 'ress';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport baseTheme from './theme/gray.json';\nimport aimTheme from './theme/aim.json';\nimport Header from './components/Header';\nimport ChooseCharacter from './components/chooseCharacter/ChooseCharacter';\nimport { SIZE_FONT_MEDIUM } from './lib/styleUtils';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family:\"ヒラギノ丸ゴ Pro W4\",\"ヒラギノ丸ゴ Pro\",\"Hiragino Maru Gothic Pro\",\"ヒラギノ角ゴ Pro W3\",\"Hiragino Kaku Gothic Pro\",\"HG丸ｺﾞｼｯｸM-PRO\",\"HGMaruGothicMPRO\";\n    background-color: #f7f7f7;\n    color: ${baseTheme.thick};\n    font-size: ${SIZE_FONT_MEDIUM}px;\n  }\n`;\n\ntype Scene = 'choice' | 'dummy';\n\nconst App: React.FC = () => {\n  const [theme, setTheme] = useState<typeof baseTheme>(baseTheme);\n  const [scene, setScene] = useState<Scene>('choice');\n  return (\n    <div>\n      <GlobalStyle />\n      <ThemeProvider theme={theme}>\n        <Header />\n        {scene === 'choice' && (\n          <ChooseCharacter\n            onSelected={(character) => {\n              switch (character) {\n                case 'aim':\n                  setTheme(aimTheme);\n                  break;\n              }\n              setScene('dummy');\n            }}\n          />\n        )}\n        {scene === 'dummy' && <p>next contents</p>}\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}