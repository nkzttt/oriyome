{"version":3,"sources":["lib/styleUtils.ts","components/Header.tsx","images/choose/aim.jpg","components/utils/SceneInOut.tsx","components/chooseCharacter/CharacterCard.tsx","components/chooseCharacter/ChooseCharacter.tsx","App.tsx","index.tsx"],"names":["createSpaceSize","multiple","BREAK_POINT","StyledContainer","styled","div","StyledTitle","h1","theme","thinner","thin","StyledRightContainer","StyledCopyright","p","baseTheme","StyledCopyrightIcon","span","Header","styledContainerProps","readyToHide","readyToShow","SceneInOut","onSceneIn","onSceneOut","children","useState","setReadyToShow","useEffect","calledOnSceneIn","useRef","calledOnSceneOut","onTransitionEnd","current","CARD_WIDTH_FOR_PC","StyledCard","isComingSoon","StyledComingSoon","StyledImageInCard","img","leftRatio","isHover","selected","BORDER_PROPERTIES","StyledBorderInCardLeft","characterTheme","thick","StyledBorderInCardRight","StyledBorderInCardTop","StyledBorderInCardBottom","StyledSelectedCenteringContainer","fadeInOut","keyframes","StyledSelectedContainer","StyledSelectedIcon","CheckCircle","StyledSelectedLabel","CharacterCard","props","setHover","setSelected","shouldHighlight","showTimer","setTimeout","highlightDelay","hideTimer","clearTimeout","onSelected","htmlImgProperties","onMouseOver","onMouseLeave","onClick","onAnimationEnd","width","height","StyledCardContainer","ChooseCharacter","setShouldHighlight","setReadyToHide","selectedCharacter","themeAim","src","imageAim","alt","GlobalStyle","createGlobalStyle","App","setTheme","scene","setScene","character","aimTheme","renderApp","ReactDOM","render","StrictMode","document","getElementById","startLoadingTime","Date","now","window","addEventListener","loading","querySelector","style","opacity","remove","Math","max"],"mappings":"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","file":"static/js/main.af9b6e23.chunk.js","sourcesContent":["export const SIZE_FONT_XX_LARGE = 24;\nexport const SIZE_FONT_LARGE = 18;\nexport const SIZE_FONT_MEDIUM = 16;\nexport const SIZE_FONT_SMALL = 14;\nexport const SIZE_FONT_MINIMUM = 12;\n\nexport const MINIMUM_PIXEL_UNIT = 8;\n\nexport const createSpaceSize = (multiple: number) =>\n  multiple * MINIMUM_PIXEL_UNIT;\n\nexport const convertHexToRGB = (hex: string, alpha?: number) => {\n  const r = parseInt(hex.slice(1, 3), 16);\n  const g = parseInt(hex.slice(3, 5), 16);\n  const b = parseInt(hex.slice(5, 7), 16);\n  if (alpha) {\n    return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n  } else {\n    return `rgb(${r}, ${g}, ${b})`;\n  }\n};\n\nexport const BREAK_POINT = 599;\nexport const HEADER_HEIGHT_FOR_SP = 6 * MINIMUM_PIXEL_UNIT;\n","import React from 'react';\nimport styled from 'styled-components';\nimport baseTheme from '../theme/gray.json';\nimport {\n  BREAK_POINT,\n  createSpaceSize,\n  HEADER_HEIGHT_FOR_SP,\n  SIZE_FONT_LARGE,\n  SIZE_FONT_MINIMUM,\n  SIZE_FONT_SMALL,\n} from '../lib/styleUtils';\n\nconst StyledContainer = styled.div`\n  position: relative;\n`;\n\nconst StyledTitle = styled.h1`\n  padding: ${createSpaceSize(3)}px;\n  background-color: ${({ theme }) => theme.thinner};\n  color: ${({ theme }) => theme.thin};\n  font-size: ${SIZE_FONT_LARGE}px;\n  font-weight: normal;\n  transition: all 600ms ease-out;\n  transition-property: background-color, color;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    height: ${HEADER_HEIGHT_FOR_SP}px;\n    line-height: ${HEADER_HEIGHT_FOR_SP}px;\n    padding: 0;\n    padding-left: ${createSpaceSize(2)}px;\n    font-size: ${SIZE_FONT_SMALL}px;\n  }\n`;\n\nconst StyledRightContainer = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  padding: 0 ${createSpaceSize(3)}px;\n`;\n\nconst StyledCopyright = styled.p`\n  color: ${baseTheme.thin};\n  font-size: ${SIZE_FONT_SMALL}px;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    font-size: ${SIZE_FONT_MINIMUM}px;\n  }\n`;\n\nconst StyledCopyrightIcon = styled.span`\n  font-size: ${SIZE_FONT_LARGE}px;\n  vertical-align: middle;\n`;\n\nconst Header: React.FC = () => (\n  <StyledContainer>\n    <StyledTitle>オリ嫁ブランディング</StyledTitle>\n    <StyledRightContainer>\n      <StyledCopyright>\n        <StyledCopyrightIcon>&copy;</StyledCopyrightIcon> 2021 nkzttt\n      </StyledCopyright>\n    </StyledRightContainer>\n  </StyledContainer>\n);\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/aim.5536ca15.jpg\";","import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { BREAK_POINT } from '../../lib/styleUtils';\n\ntype StyledContainerProps = { readyToShow?: boolean; readyToHide?: boolean };\nconst getOpacity = (styledContainerProps: StyledContainerProps) => {\n  if (styledContainerProps.readyToHide) return 0;\n  if (styledContainerProps.readyToShow) return 1;\n  return 0;\n};\nconst getScale = (styledContainerProps: StyledContainerProps) => {\n  if (styledContainerProps.readyToHide) return 1.05;\n  if (styledContainerProps.readyToShow) return 1;\n  return 1.05;\n};\nconst StyledContainer = styled.div<StyledContainerProps>`\n  width: 100%;\n  opacity: ${getOpacity};\n  transform: scale(${getScale});\n  transition: all 600ms ease-out;\n  transition-property: opacity, transform;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    transform: none;\n  }\n`;\n\ntype Props = {\n  readyToHide?: boolean;\n  onSceneIn?: () => void;\n  onSceneOut?: () => void;\n};\nconst SceneInOut: React.FC<Props> = ({\n  readyToHide,\n  onSceneIn,\n  onSceneOut,\n  children,\n}) => {\n  const [readyToShow, setReadyToShow] = useState(false);\n  useEffect(() => setReadyToShow(true), []);\n  const calledOnSceneIn = useRef<boolean>(false);\n  const calledOnSceneOut = useRef<boolean>(false);\n  return (\n    <StyledContainer\n      readyToShow={readyToShow}\n      readyToHide={readyToHide}\n      onTransitionEnd={() => {\n        if (readyToShow && !calledOnSceneIn.current) {\n          calledOnSceneIn.current = true;\n          onSceneIn && onSceneIn();\n        }\n        if (readyToHide && !calledOnSceneOut.current) {\n          calledOnSceneOut.current = true;\n          onSceneOut && onSceneOut();\n        }\n      }}\n    >\n      {children}\n    </StyledContainer>\n  );\n};\n\nexport default SceneInOut;\n","import React, { useEffect, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { CheckCircle } from '@styled-icons/boxicons-regular/CheckCircle';\nimport baseTheme from '../../theme/gray.json';\nimport {\n  BREAK_POINT,\n  createSpaceSize,\n  SIZE_FONT_XX_LARGE,\n} from '../../lib/styleUtils';\n\ntype Theme = typeof baseTheme;\n\nconst CARD_WIDTH_FOR_PC = 150;\ntype StyledCardProps = { isComingSoon?: boolean };\nconst StyledCard = styled.div<StyledCardProps>`\n  width: ${CARD_WIDTH_FOR_PC}px;\n  height: 500px;\n  position: relative;\n  margin: 0 ${createSpaceSize(3)}px;\n  background-color: ${baseTheme.thinner};\n  cursor: ${({ isComingSoon }) => (isComingSoon ? 'auto' : 'pointer')};\n  overflow: hidden;\n  &:first-child {\n    box-shadow: rgba(0, 0, 0, 0.05) -${CARD_WIDTH_FOR_PC + createSpaceSize(6)}px\n        0,\n      rgba(0, 0, 0, 0.03) -${(CARD_WIDTH_FOR_PC + createSpaceSize(6)) * 2}px 0,\n      rgba(0, 0, 0, 0.02) -${(CARD_WIDTH_FOR_PC + createSpaceSize(6)) * 3}px 0;\n  }\n  &:last-child {\n    box-shadow: rgba(0, 0, 0, 0.05) ${CARD_WIDTH_FOR_PC + createSpaceSize(6)}px\n        0,\n      rgba(0, 0, 0, 0.03) ${(CARD_WIDTH_FOR_PC + createSpaceSize(6)) * 2}px 0,\n      rgba(0, 0, 0, 0.02) ${(CARD_WIDTH_FOR_PC + createSpaceSize(6)) * 3}px 0;\n  }\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    width: 50%;\n    height: 50%;\n    margin: 0;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    &:first-child,\n    &:last-child {\n      box-shadow: none;\n    }\n  }\n`;\n\nconst StyledComingSoon = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n  color: ${baseTheme.thin};\n  font-size: ${SIZE_FONT_XX_LARGE}px;\n  text-align: center;\n  transform: rotate(-20deg);\n`;\n\ntype StyledImageInCardProps = {\n  leftRatio: [forPc: number, forSp: number];\n  isHover: boolean;\n  selected: boolean;\n};\nconst StyledImageInCard = styled.img<StyledImageInCardProps>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: auto;\n  height: 100%;\n  transform: translateX(${({ leftRatio }) => leftRatio[0]}%);\n  filter: grayscale(\n    ${({ isHover, selected }) => (isHover || selected ? 0 : 1)}\n  );\n  transition: filter 350ms linear;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    transform: translateX(${({ leftRatio }) => leftRatio[1]}%);\n  }\n`;\n\nconst BORDER_PROPERTIES = {\n  size: 3,\n  transitionTime: 500,\n};\ntype StyledBorderInCardProps = {\n  characterTheme: Theme;\n  isHover: boolean;\n  selected: boolean;\n};\nconst StyledBorderInCardLeft = styled.div<StyledBorderInCardProps>`\n  width: ${BORDER_PROPERTIES.size}px;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: ${({ characterTheme, isHover }) =>\n    (isHover ? characterTheme : baseTheme).thick};\n  transform: translateY(\n    ${({ isHover, selected }) => (isHover || selected ? -100 : 100)}%\n  );\n  transition: transform ${BORDER_PROPERTIES.transitionTime}ms linear;\n`;\nconst StyledBorderInCardRight = styled.div<StyledBorderInCardProps>`\n  width: ${BORDER_PROPERTIES.size}px;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  right: 0;\n  background-color: ${({ characterTheme, isHover }) =>\n    (isHover ? characterTheme : baseTheme).thick};\n  transform: translateY(\n    ${({ isHover, selected }) => (isHover || selected ? 100 : -100)}%\n  );\n  transition: transform ${BORDER_PROPERTIES.transitionTime}ms linear;\n`;\nconst StyledBorderInCardTop = styled.div<StyledBorderInCardProps>`\n  width: 100%;\n  height: ${BORDER_PROPERTIES.size}px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: ${({ characterTheme, isHover }) =>\n    (isHover ? characterTheme : baseTheme).thick};\n  transform: translateX(\n    ${({ isHover, selected }) => (isHover || selected ? 100 : -100)}%\n  );\n  transition: transform ${BORDER_PROPERTIES.transitionTime}ms linear;\n`;\nconst StyledBorderInCardBottom = styled.div<StyledBorderInCardProps>`\n  width: 100%;\n  height: ${BORDER_PROPERTIES.size}px;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  background-color: ${({ characterTheme, isHover }) =>\n    (isHover ? characterTheme : baseTheme).thick};\n  transform: translateX(\n    ${({ isHover, selected }) => (isHover || selected ? -100 : 100)}%\n  );\n  transition: transform ${BORDER_PROPERTIES.transitionTime}ms linear;\n`;\n\nconst StyledSelectedCenteringContainer = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst fadeInOut = keyframes`\n  0% {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  33%, 66% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n  100% {\n    opacity: 0;\n    transform: translateY(-30px);\n  }\n`;\nconst StyledSelectedContainer = styled.div`\n  text-align: center;\n  opacity: 0;\n  animation: ${fadeInOut} 1200ms ease-in-out forwards;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    animation-delay: 500ms;\n  }\n`;\ntype StyledSelectedIconProps = { characterTheme: Theme };\nconst StyledSelectedIcon = styled(CheckCircle)<StyledSelectedIconProps>`\n  margin: 0 auto;\n  color: ${({ characterTheme }) => characterTheme.thinner};\n  filter: drop-shadow(0 0 3px ${({ characterTheme }) => characterTheme.thin});\n`;\ntype StyledSelectedLabelProps = { characterTheme: Theme };\nconst StyledSelectedLabel = styled.p<StyledSelectedLabelProps>`\n  color: ${({ characterTheme }) => characterTheme.thinner};\n  font-size: ${SIZE_FONT_XX_LARGE}px;\n  filter: drop-shadow(0 0 3px ${({ characterTheme }) => characterTheme.thin});\n`;\n\ntype Props =\n  | { isComingSoon: true }\n  | (React.ImgHTMLAttributes<HTMLImageElement> & {\n      leftRatio: [forPc: number, forSp: number];\n      characterTheme: Theme;\n      onSelected: () => void;\n      shouldHighlight?: boolean;\n      highlightDelay?: number;\n    });\nconst CharacterCard: React.FC<Props> = (props) => {\n  const [isHover, setHover] = useState(false);\n  const [selected, setSelected] = useState(false);\n  useEffect(() => {\n    if ('isComingSoon' in props) return;\n    if (!props.shouldHighlight) return;\n    const showTimer = setTimeout(\n      () => setHover(true),\n      props.highlightDelay || 0\n    );\n    const hideTimer = setTimeout(\n      () => setHover(false),\n      (props.highlightDelay || 0) + BORDER_PROPERTIES.transitionTime + 100\n    );\n    return () => {\n      clearTimeout(showTimer);\n      clearTimeout(hideTimer);\n    };\n  }, [props]);\n  if ('isComingSoon' in props) {\n    return (\n      <StyledCard isComingSoon>\n        <StyledComingSoon>\n          <p>coming soon</p>\n        </StyledComingSoon>\n      </StyledCard>\n    );\n  }\n  const { leftRatio, characterTheme, onSelected, ...htmlImgProperties } = props;\n  return (\n    <StyledCard\n      onMouseOver={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n      onClick={() => setSelected(true)}\n    >\n      <StyledImageInCard\n        {...htmlImgProperties}\n        leftRatio={leftRatio}\n        isHover={isHover}\n        selected={selected}\n      />\n      <StyledBorderInCardLeft\n        characterTheme={characterTheme}\n        isHover={isHover}\n        selected={selected}\n      />\n      <StyledBorderInCardRight\n        characterTheme={characterTheme}\n        isHover={isHover}\n        selected={selected}\n      />\n      <StyledBorderInCardTop\n        characterTheme={characterTheme}\n        isHover={isHover}\n        selected={selected}\n      />\n      <StyledBorderInCardBottom\n        characterTheme={characterTheme}\n        isHover={isHover}\n        selected={selected}\n      />\n      {selected && (\n        <StyledSelectedCenteringContainer>\n          <StyledSelectedContainer onAnimationEnd={onSelected}>\n            <StyledSelectedIcon\n              characterTheme={characterTheme}\n              width={50}\n              height={50}\n            />\n            <StyledSelectedLabel characterTheme={characterTheme}>\n              selected\n            </StyledSelectedLabel>\n          </StyledSelectedContainer>\n        </StyledSelectedCenteringContainer>\n      )}\n    </StyledCard>\n  );\n};\n\nexport default CharacterCard;\n","import React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  BREAK_POINT,\n  createSpaceSize,\n  HEADER_HEIGHT_FOR_SP,\n} from '../../lib/styleUtils';\nimport themeAim from '../../theme/aim.json';\nimport imageAim from '../../images/choose/aim.jpg';\nimport SceneInOut from '../utils/SceneInOut';\nimport CharacterCard from './CharacterCard';\n\nconst StyledContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-top: ${createSpaceSize(5)}px;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    height: calc(100vh - ${HEADER_HEIGHT_FOR_SP}px);\n    padding-top: 0;\n  }\n`;\n\nconst StyledCardContainer = styled.div`\n  display: flex;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    flex-wrap: wrap;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\ntype CHARACTER = 'aim';\n\ntype Props = {\n  onSelected: (character: CHARACTER) => void;\n};\nconst ChooseCharacter: React.FC<Props> = ({ onSelected }) => {\n  const [shouldHighlight, setShouldHighlight] = useState(false);\n  const [readyToHide, setReadyToHide] = useState(false);\n  const selectedCharacter = useRef<CHARACTER | null>(null);\n  return (\n    <SceneInOut\n      readyToHide={!!selectedCharacter.current && readyToHide}\n      onSceneIn={() => setShouldHighlight(true)}\n      onSceneOut={() =>\n        selectedCharacter.current && onSelected(selectedCharacter.current)\n      }\n    >\n      <StyledContainer>\n        <StyledCardContainer>\n          <CharacterCard\n            leftRatio={[-35, -12]}\n            characterTheme={themeAim}\n            onSelected={() => {\n              setReadyToHide(true);\n              selectedCharacter.current = 'aim';\n            }}\n            src={imageAim}\n            alt=\"愛夢\"\n            shouldHighlight={shouldHighlight}\n          />\n          <CharacterCard isComingSoon />\n          <CharacterCard isComingSoon />\n        </StyledCardContainer>\n      </StyledContainer>\n    </SceneInOut>\n  );\n};\n\nexport default ChooseCharacter;\n","import React, { useState } from 'react';\nimport 'ress';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport baseTheme from './theme/gray.json';\nimport aimTheme from './theme/aim.json';\nimport Header from './components/Header';\nimport ChooseCharacter from './components/chooseCharacter/ChooseCharacter';\nimport { SIZE_FONT_MEDIUM } from './lib/styleUtils';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family:'ヒラギノ丸ゴ Pro W4','ヒラギノ丸ゴ Pro','Hiragino Maru Gothic Pro','ヒラギノ角ゴ Pro W3','Hiragino Kaku Gothic Pro','HG丸ｺﾞｼｯｸM-PRO','HGMaruGothicMPRO';\n    background-color: #f7f7f7;\n    color: ${baseTheme.thick};\n    font-size: ${SIZE_FONT_MEDIUM}px;\n  }\n`;\n\ntype Scene = 'choice' | 'dummy';\n\nconst App: React.FC = () => {\n  const [theme, setTheme] = useState<typeof baseTheme>(baseTheme);\n  const [scene, setScene] = useState<Scene>('choice');\n  return (\n    <div>\n      <GlobalStyle />\n      <ThemeProvider theme={theme}>\n        <Header />\n        {scene === 'choice' && (\n          <ChooseCharacter\n            onSelected={(character) => {\n              switch (character) {\n                case 'aim':\n                  setTheme(aimTheme);\n                  break;\n              }\n              setScene('dummy');\n            }}\n          />\n        )}\n        {scene === 'dummy' && <p>next contents</p>}\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n};\n\n(() => {\n  const startLoadingTime = Date.now();\n  window.addEventListener('load', () => {\n    setTimeout(function () {\n      const loading = document.querySelector<HTMLDivElement>('#loading');\n      if (!loading) {\n        renderApp();\n        return;\n      }\n\n      loading.style.opacity = '0';\n      loading.addEventListener('transitionend', () => {\n        loading.remove();\n        renderApp();\n      });\n    }, Math.max(1000 - (Date.now() - startLoadingTime), 0));\n  });\n})();\n"],"sourceRoot":""}