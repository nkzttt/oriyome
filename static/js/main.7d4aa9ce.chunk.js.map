{"version":3,"sources":["lib/styleUtils.ts","components/Header.tsx","components/Body.tsx","images/choose/aim.jpg","components/utils/SceneInOut.tsx","components/chooseCharacter/CharacterCard.tsx","components/chooseCharacter/ChooseCharacter.tsx","components/aim/LocalHeader.tsx","components/utils/BorderText.tsx","components/aim/Profile.tsx","components/aim/Aim.tsx","App.tsx","index.tsx"],"names":["createSpaceSize","multiple","convertHexToRGB","hex","alpha","r","parseInt","slice","g","b","BREAK_POINT","StyledContainer","styled","div","StyledTitleContainer","theme","thinner","StyledTitle","h1","thin","isLink","StyledConnectingText","p","thick","StyledCharacterName","StyledRightContainer","StyledCopyright","baseTheme","StyledCopyrightIcon","span","Header","characterName","onPressTitle","onClick","StyledBodyContainer","blurring","keyframes","StyledBottomGradient","Body","children","styledContainerProps","readyToHide","readyToShow","SceneInOut","onSceneIn","onSceneOut","useState","setReadyToShow","useEffect","calledOnSceneIn","useRef","calledOnSceneOut","onTransitionEnd","current","CARD_WIDTH_FOR_PC","StyledCard","isComingSoon","StyledComingSoon","StyledImageInCard","img","leftRatio","isHover","selected","BORDER_PROPERTIES","StyledBorderInCardLeft","characterTheme","StyledBorderInCardRight","StyledBorderInCardTop","StyledBorderInCardBottom","StyledSelectedCenteringContainer","fadeInOut","StyledSelectedContainer","StyledSelectedIcon","CheckCircle","StyledSelectedLabel","CharacterCard","props","setHover","setSelected","shouldHighlight","showTimer","setTimeout","highlightDelay","hideTimer","clearTimeout","onSelected","htmlImgProperties","onMouseOver","onMouseLeave","onAnimationEnd","width","height","StyledCardContainer","ChooseCharacter","setShouldHighlight","setReadyToHide","selectedCharacter","themeAim","src","imageAim","alt","StyledMenu","ul","StyledMenuItem","li","isActive","LocalHeader","menus","currentMenu","onChoice","map","menu","StyledBorderText","BorderText","StyledCharacterImage","StyledWord","StyledProfile","StyledProfileItem","Profile","StyledLocalHeaderContainer","MENUS","Aim","backToChoice","onSceneOutForBackToChoice","readyToStartAnimation","setReadyToStartAnimation","setCurrentMenu","GlobalStyle","createGlobalStyle","CHARACTER_THEMES","aim","aimTheme","getCharacterName","scene","App","setTheme","setScene","setBackToChoice","character","renderApp","ReactDOM","render","StrictMode","document","getElementById","startLoadingTime","Date","now","window","addEventListener","loading","querySelector","style","opacity","remove","Math","max"],"mappings":"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","file":"static/js/main.7d4aa9ce.chunk.js","sourcesContent":["export const SIZE_FONT_XXX_LARGE = 32;\nexport const SIZE_FONT_XX_LARGE = 24;\nexport const SIZE_FONT_LARGE = 18;\nexport const SIZE_FONT_MEDIUM = 16;\nexport const SIZE_FONT_SMALL = 14;\nexport const SIZE_FONT_MINIMUM = 12;\n\nexport const MINIMUM_PIXEL_UNIT = 8;\n\nexport const createSpaceSize = (multiple: number) =>\n  multiple * MINIMUM_PIXEL_UNIT;\n\nexport const convertHexToRGB = (hex: string, alpha?: number) => {\n  const r = parseInt(hex.slice(1, 3), 16);\n  const g = parseInt(hex.slice(3, 5), 16);\n  const b = parseInt(hex.slice(5, 7), 16);\n  if (typeof alpha === 'number') {\n    return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n  } else {\n    return `rgb(${r}, ${g}, ${b})`;\n  }\n};\n\nexport const BREAK_POINT = 599;\nexport const HEADER_HEIGHT_FOR_PC = 9 * MINIMUM_PIXEL_UNIT;\nexport const HEADER_HEIGHT_FOR_SP = 6 * MINIMUM_PIXEL_UNIT;\n","import React from 'react';\nimport styled from 'styled-components';\nimport baseTheme from '../theme/gray.json';\nimport {\n  BREAK_POINT,\n  createSpaceSize,\n  HEADER_HEIGHT_FOR_PC,\n  HEADER_HEIGHT_FOR_SP,\n  SIZE_FONT_LARGE,\n  SIZE_FONT_MINIMUM,\n  SIZE_FONT_SMALL,\n} from '../lib/styleUtils';\n\nconst StyledContainer = styled.div`\n  position: relative;\n`;\n\nconst StyledTitleContainer = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: ${({ theme }) => theme.thinner};\n  transition: background-color 600ms ease-out;\n`;\n\ntype StyledTitleProps = { isLink: boolean };\nconst StyledTitle = styled.h1<StyledTitleProps>`\n  height: ${HEADER_HEIGHT_FOR_PC}px;\n  line-height: ${HEADER_HEIGHT_FOR_PC}px;\n  padding-left: ${createSpaceSize(3)}px;\n  color: ${({ theme }) => theme.thin};\n  font-size: ${SIZE_FONT_LARGE}px;\n  font-weight: normal;\n  cursor: ${({ isLink }) => (isLink ? 'pointer' : 'default')};\n  transition: color 600ms ease-out;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    height: ${HEADER_HEIGHT_FOR_SP}px;\n    line-height: ${HEADER_HEIGHT_FOR_SP}px;\n    padding-left: ${createSpaceSize(2)}px;\n    font-size: ${SIZE_FONT_SMALL}px;\n  }\n`;\n\nconst StyledConnectingText = styled.p`\n  margin: 0 ${createSpaceSize(2)}px;\n  color: ${({ theme }) => theme.thick};\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    font-size: ${SIZE_FONT_SMALL}px;\n  }\n`;\n\nconst StyledCharacterName = styled.p`\n  position: relative;\n  z-index: 1;\n  color: ${({ theme }) => theme.thick};\n  font-size: ${SIZE_FONT_LARGE}px;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    font-size: ${SIZE_FONT_SMALL}px;\n  }\n`;\n\nconst StyledRightContainer = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  padding: 0 ${createSpaceSize(3)}px;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    padding: 0 ${createSpaceSize(2)}px;\n  }\n`;\n\nconst StyledCopyright = styled.p`\n  color: ${baseTheme.thin};\n  font-size: ${SIZE_FONT_SMALL}px;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    font-size: ${SIZE_FONT_MINIMUM}px;\n  }\n`;\n\nconst StyledCopyrightIcon = styled.span`\n  font-size: ${SIZE_FONT_LARGE}px;\n  vertical-align: middle;\n`;\n\ntype Props = { characterName?: string; onPressTitle: () => void };\n\nconst Header: React.FC<Props> = ({ characterName, onPressTitle }) => (\n  <StyledContainer>\n    <StyledTitleContainer>\n      <StyledTitle\n        isLink={!!characterName}\n        onClick={() => !!characterName && onPressTitle()}\n      >\n        オリ嫁ブランディング\n      </StyledTitle>\n      {characterName && (\n        <>\n          <StyledConnectingText>&gt;</StyledConnectingText>\n          <StyledCharacterName>{characterName}</StyledCharacterName>\n        </>\n      )}\n    </StyledTitleContainer>\n    <StyledRightContainer>\n      <StyledCopyright>\n        <StyledCopyrightIcon>&copy;</StyledCopyrightIcon> 2021 nkzttt\n      </StyledCopyright>\n    </StyledRightContainer>\n  </StyledContainer>\n);\n\nexport default Header;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport {\n  BREAK_POINT,\n  createSpaceSize,\n  convertHexToRGB,\n  HEADER_HEIGHT_FOR_PC,\n  HEADER_HEIGHT_FOR_SP,\n} from '../lib/styleUtils';\n\nconst StyledContainer = styled.div`\n  min-height: calc(100vh - ${HEADER_HEIGHT_FOR_PC}px);\n  color: ${({ theme }) => theme.thick};\n  background-color: ${({ theme }) => theme.thinner};\n  transition: all 600ms ease-out;\n  transition-property: background-color, color;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    min-height: calc(100vh - ${HEADER_HEIGHT_FOR_SP}px);\n  }\n`;\n\nconst StyledBodyContainer = styled.div`\n  position: relative;\n  z-index: 1;\n`;\n\nconst blurring = keyframes`\n  from {\n    opacity: 0.2;\n    transform: scale(1);\n  }\n  to {\n    opacity: 0.3;\n    transform: scale(1.1);\n  }\n`;\nconst StyledBottomGradient = styled.div`\n  width: 60vw;\n  height: 30vw;\n  position: fixed;\n  bottom: ${createSpaceSize(3)}px;\n  right: ${createSpaceSize(3)}px;\n  background: linear-gradient(\n    150deg,\n    ${({ theme }) => convertHexToRGB(theme.thin, 0)} 40%,\n    ${({ theme }) => theme.thin}\n  );\n  filter: blur(${createSpaceSize(3)}px);\n  opacity: 0;\n  transform-origin: bottom right;\n  animation: ${blurring} 3000ms linear infinite alternate;\n`;\n\nconst Body: React.FC = ({ children }) => (\n  <StyledContainer>\n    <StyledBodyContainer>{children}</StyledBodyContainer>\n    <StyledBottomGradient />\n  </StyledContainer>\n);\n\nexport default Body;\n","export default __webpack_public_path__ + \"static/media/aim.5536ca15.jpg\";","import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { BREAK_POINT } from '../../lib/styleUtils';\n\ntype StyledContainerProps = { readyToShow?: boolean; readyToHide?: boolean };\nconst getOpacity = (styledContainerProps: StyledContainerProps) => {\n  if (styledContainerProps.readyToHide) return 0;\n  if (styledContainerProps.readyToShow) return 1;\n  return 0;\n};\nconst getScale = (styledContainerProps: StyledContainerProps) => {\n  if (styledContainerProps.readyToHide) return 1.05;\n  if (styledContainerProps.readyToShow) return 1;\n  return 1.05;\n};\nconst getTranslate = (styledContainerProps: StyledContainerProps) => {\n  if (styledContainerProps.readyToHide) return '15px';\n  if (styledContainerProps.readyToShow) return 0;\n  return '15px';\n};\nconst StyledContainer = styled.div<StyledContainerProps>`\n  width: 100%;\n  opacity: ${getOpacity};\n  transform: scale(${getScale});\n  transition: all 600ms ease-out;\n  transition-property: opacity, transform;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    transform: translateY(${getTranslate});\n  }\n`;\n\ntype Props = {\n  readyToHide?: boolean;\n  onSceneIn?: () => void;\n  onSceneOut?: () => void;\n};\nconst SceneInOut: React.FC<Props> = ({\n  readyToHide,\n  onSceneIn,\n  onSceneOut,\n  children,\n}) => {\n  const [readyToShow, setReadyToShow] = useState(false);\n  useEffect(() => setReadyToShow(true), []);\n  const calledOnSceneIn = useRef<boolean>(false);\n  const calledOnSceneOut = useRef<boolean>(false);\n  return (\n    <StyledContainer\n      readyToShow={readyToShow}\n      readyToHide={readyToHide}\n      onTransitionEnd={() => {\n        if (readyToShow && !calledOnSceneIn.current) {\n          calledOnSceneIn.current = true;\n          onSceneIn && onSceneIn();\n        }\n        if (readyToHide && !calledOnSceneOut.current) {\n          calledOnSceneOut.current = true;\n          onSceneOut && onSceneOut();\n        }\n      }}\n    >\n      {children}\n    </StyledContainer>\n  );\n};\n\nexport default SceneInOut;\n","import React, { useEffect, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { CheckCircle } from '@styled-icons/boxicons-regular/CheckCircle';\nimport baseTheme from '../../theme/gray.json';\nimport {\n  BREAK_POINT,\n  createSpaceSize,\n  SIZE_FONT_XX_LARGE,\n} from '../../lib/styleUtils';\n\ntype Theme = typeof baseTheme;\n\nconst CARD_WIDTH_FOR_PC = 150;\ntype StyledCardProps = { isComingSoon?: boolean };\nconst StyledCard = styled.div<StyledCardProps>`\n  width: ${CARD_WIDTH_FOR_PC}px;\n  height: 500px;\n  position: relative;\n  margin: 0 ${createSpaceSize(3)}px;\n  background-color: ${baseTheme.thinner};\n  cursor: ${({ isComingSoon }) => (isComingSoon ? 'auto' : 'pointer')};\n  overflow: hidden;\n  &:first-child {\n    box-shadow: rgba(0, 0, 0, 0.05) -${CARD_WIDTH_FOR_PC + createSpaceSize(6)}px\n        0,\n      rgba(0, 0, 0, 0.03) -${(CARD_WIDTH_FOR_PC + createSpaceSize(6)) * 2}px 0,\n      rgba(0, 0, 0, 0.02) -${(CARD_WIDTH_FOR_PC + createSpaceSize(6)) * 3}px 0;\n  }\n  &:last-child {\n    box-shadow: rgba(0, 0, 0, 0.05) ${CARD_WIDTH_FOR_PC + createSpaceSize(6)}px\n        0,\n      rgba(0, 0, 0, 0.03) ${(CARD_WIDTH_FOR_PC + createSpaceSize(6)) * 2}px 0,\n      rgba(0, 0, 0, 0.02) ${(CARD_WIDTH_FOR_PC + createSpaceSize(6)) * 3}px 0;\n  }\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    width: 50%;\n    height: 50%;\n    margin: 0;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    &:first-child,\n    &:last-child {\n      box-shadow: none;\n    }\n  }\n`;\n\nconst StyledComingSoon = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n  color: ${baseTheme.thin};\n  font-size: ${SIZE_FONT_XX_LARGE}px;\n  text-align: center;\n  transform: rotate(-20deg);\n`;\n\ntype StyledImageInCardProps = {\n  leftRatio: [forPc: number, forSp: number];\n  isHover: boolean;\n  selected: boolean;\n};\nconst StyledImageInCard = styled.img<StyledImageInCardProps>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: auto;\n  height: 100%;\n  transform: translateX(${({ leftRatio }) => leftRatio[0]}%);\n  filter: grayscale(\n    ${({ isHover, selected }) => (isHover || selected ? 0 : 1)}\n  );\n  transition: filter 350ms linear;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    transform: translateX(${({ leftRatio }) => leftRatio[1]}%);\n  }\n`;\n\nconst BORDER_PROPERTIES = {\n  size: 3,\n  transitionTime: 500,\n};\ntype StyledBorderInCardProps = {\n  characterTheme: Theme;\n  isHover: boolean;\n  selected: boolean;\n};\nconst StyledBorderInCardLeft = styled.div<StyledBorderInCardProps>`\n  width: ${BORDER_PROPERTIES.size}px;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: ${({ characterTheme, isHover }) =>\n    (isHover ? characterTheme : baseTheme).thick};\n  transform: translateY(\n    ${({ isHover, selected }) => (isHover || selected ? -100 : 100)}%\n  );\n  transition: transform ${BORDER_PROPERTIES.transitionTime}ms linear;\n`;\nconst StyledBorderInCardRight = styled.div<StyledBorderInCardProps>`\n  width: ${BORDER_PROPERTIES.size}px;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  right: 0;\n  background-color: ${({ characterTheme, isHover }) =>\n    (isHover ? characterTheme : baseTheme).thick};\n  transform: translateY(\n    ${({ isHover, selected }) => (isHover || selected ? 100 : -100)}%\n  );\n  transition: transform ${BORDER_PROPERTIES.transitionTime}ms linear;\n`;\nconst StyledBorderInCardTop = styled.div<StyledBorderInCardProps>`\n  width: 100%;\n  height: ${BORDER_PROPERTIES.size}px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: ${({ characterTheme, isHover }) =>\n    (isHover ? characterTheme : baseTheme).thick};\n  transform: translateX(\n    ${({ isHover, selected }) => (isHover || selected ? 100 : -100)}%\n  );\n  transition: transform ${BORDER_PROPERTIES.transitionTime}ms linear;\n`;\nconst StyledBorderInCardBottom = styled.div<StyledBorderInCardProps>`\n  width: 100%;\n  height: ${BORDER_PROPERTIES.size}px;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  background-color: ${({ characterTheme, isHover }) =>\n    (isHover ? characterTheme : baseTheme).thick};\n  transform: translateX(\n    ${({ isHover, selected }) => (isHover || selected ? -100 : 100)}%\n  );\n  transition: transform ${BORDER_PROPERTIES.transitionTime}ms linear;\n`;\n\nconst StyledSelectedCenteringContainer = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst fadeInOut = keyframes`\n  0% {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  33%, 66% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n  100% {\n    opacity: 0;\n    transform: translateY(-30px);\n  }\n`;\nconst StyledSelectedContainer = styled.div`\n  text-align: center;\n  opacity: 0;\n  animation: ${fadeInOut} 1200ms ease-in-out forwards;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    animation-delay: 500ms;\n  }\n`;\ntype StyledSelectedIconProps = { characterTheme: Theme };\nconst StyledSelectedIcon = styled(CheckCircle)<StyledSelectedIconProps>`\n  margin: 0 auto;\n  color: ${({ characterTheme }) => characterTheme.thinner};\n  filter: drop-shadow(0 0 3px ${({ characterTheme }) => characterTheme.thin});\n`;\ntype StyledSelectedLabelProps = { characterTheme: Theme };\nconst StyledSelectedLabel = styled.p<StyledSelectedLabelProps>`\n  color: ${({ characterTheme }) => characterTheme.thinner};\n  font-size: ${SIZE_FONT_XX_LARGE}px;\n  filter: drop-shadow(0 0 3px ${({ characterTheme }) => characterTheme.thin});\n`;\n\ntype Props =\n  | { isComingSoon: true }\n  | (React.ImgHTMLAttributes<HTMLImageElement> & {\n      leftRatio: [forPc: number, forSp: number];\n      characterTheme: Theme;\n      onSelected: () => void;\n      shouldHighlight?: boolean;\n      highlightDelay?: number;\n    });\nconst CharacterCard: React.FC<Props> = (props) => {\n  const [isHover, setHover] = useState(false);\n  const [selected, setSelected] = useState(false);\n  useEffect(() => {\n    if ('isComingSoon' in props) return;\n    if (!props.shouldHighlight) return;\n    const showTimer = setTimeout(\n      () => setHover(true),\n      props.highlightDelay || 0\n    );\n    const hideTimer = setTimeout(\n      () => setHover(false),\n      (props.highlightDelay || 0) + BORDER_PROPERTIES.transitionTime + 100\n    );\n    return () => {\n      clearTimeout(showTimer);\n      clearTimeout(hideTimer);\n    };\n  }, [props]);\n  if ('isComingSoon' in props) {\n    return (\n      <StyledCard isComingSoon>\n        <StyledComingSoon>\n          <p>coming soon</p>\n        </StyledComingSoon>\n      </StyledCard>\n    );\n  }\n  const { leftRatio, characterTheme, onSelected, ...htmlImgProperties } = props;\n  return (\n    <StyledCard\n      onMouseOver={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n      onClick={() => setSelected(true)}\n    >\n      <StyledImageInCard\n        {...htmlImgProperties}\n        leftRatio={leftRatio}\n        isHover={isHover}\n        selected={selected}\n      />\n      <StyledBorderInCardLeft\n        characterTheme={characterTheme}\n        isHover={isHover}\n        selected={selected}\n      />\n      <StyledBorderInCardRight\n        characterTheme={characterTheme}\n        isHover={isHover}\n        selected={selected}\n      />\n      <StyledBorderInCardTop\n        characterTheme={characterTheme}\n        isHover={isHover}\n        selected={selected}\n      />\n      <StyledBorderInCardBottom\n        characterTheme={characterTheme}\n        isHover={isHover}\n        selected={selected}\n      />\n      {selected && (\n        <StyledSelectedCenteringContainer>\n          <StyledSelectedContainer onAnimationEnd={onSelected}>\n            <StyledSelectedIcon\n              characterTheme={characterTheme}\n              width={50}\n              height={50}\n            />\n            <StyledSelectedLabel characterTheme={characterTheme}>\n              selected\n            </StyledSelectedLabel>\n          </StyledSelectedContainer>\n        </StyledSelectedCenteringContainer>\n      )}\n    </StyledCard>\n  );\n};\n\nexport default CharacterCard;\n","import React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  BREAK_POINT,\n  createSpaceSize,\n  HEADER_HEIGHT_FOR_SP,\n} from '../../lib/styleUtils';\nimport themeAim from '../../theme/aim.json';\nimport imageAim from '../../images/choose/aim.jpg';\nimport SceneInOut from '../utils/SceneInOut';\nimport CharacterCard from './CharacterCard';\n\nconst StyledContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-top: ${createSpaceSize(5)}px;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    height: calc(100vh - ${HEADER_HEIGHT_FOR_SP}px);\n    padding-top: 0;\n  }\n`;\n\nconst StyledCardContainer = styled.div`\n  display: flex;\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    flex-wrap: wrap;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\ntype CHARACTER = 'aim';\n\ntype Props = {\n  onSelected: (character: CHARACTER) => void;\n};\nconst ChooseCharacter: React.FC<Props> = ({ onSelected }) => {\n  const [shouldHighlight, setShouldHighlight] = useState(false);\n  const [readyToHide, setReadyToHide] = useState(false);\n  const selectedCharacter = useRef<CHARACTER | null>(null);\n  return (\n    <SceneInOut\n      readyToHide={!!selectedCharacter.current && readyToHide}\n      onSceneIn={() => setShouldHighlight(true)}\n      onSceneOut={() =>\n        selectedCharacter.current && onSelected(selectedCharacter.current)\n      }\n    >\n      <StyledContainer>\n        <StyledCardContainer>\n          <CharacterCard\n            leftRatio={[-35, -12]}\n            characterTheme={themeAim}\n            onSelected={() => {\n              setReadyToHide(true);\n              selectedCharacter.current = 'aim';\n            }}\n            src={imageAim}\n            alt=\"愛夢\"\n            shouldHighlight={shouldHighlight}\n          />\n          <CharacterCard isComingSoon />\n          <CharacterCard isComingSoon />\n        </StyledCardContainer>\n      </StyledContainer>\n    </SceneInOut>\n  );\n};\n\nexport default ChooseCharacter;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {\n  BREAK_POINT,\n  createSpaceSize,\n  convertHexToRGB,\n  MINIMUM_PIXEL_UNIT,\n  SIZE_FONT_SMALL,\n} from '../../lib/styleUtils';\n\nconst StyledContainer = styled.div`\n  width: 100%;\n  position: relative;\n  text-align: center;\n  overflow: hidden;\n  &::after {\n    content: '';\n    display: block;\n    height: 2px;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(\n      to right,\n      ${({ theme }) => convertHexToRGB(theme.thick, 0)} 10%,\n      ${({ theme }) => theme.thick} 30%,\n      ${({ theme }) => theme.thick} 70%,\n      ${({ theme }) => convertHexToRGB(theme.thick, 0)} 90%\n    );\n\n    @media screen and (max-width: ${BREAK_POINT}px) {\n      background: ${({ theme }) => theme.thick};\n    }\n  }\n`;\n\nconst StyledMenu = styled.ul`\n  list-style: none;\n  display: inline-flex;\n  position: relative;\n  &::before,\n  &::after {\n    content: '';\n    display: block;\n    position: absolute;\n    bottom: -3px;\n    border: solid 2px ${({ theme }) => theme.thick};\n    border-bottom: none;\n    background-color: ${({ theme }) => theme.thinner};\n  }\n  &::before {\n    width: ${createSpaceSize(3)}px;\n    height: ${createSpaceSize(3)}px;\n    left: -${createSpaceSize(6)}px;\n  }\n  &::after {\n    width: ${createSpaceSize(2)}px;\n    height: ${createSpaceSize(2)}px;\n    right: -${createSpaceSize(4)}px;\n  }\n`;\n\ntype StyledMenuItemProps = { isActive: boolean };\nconst StyledMenuItem = styled.li<StyledMenuItemProps>`\n  position: relative;\n  top: 3px;\n  padding: 0 ${createSpaceSize(3)}px;\n  margin-left: ${MINIMUM_PIXEL_UNIT}px;\n  &:first-child {\n    margin-left: 0;\n  }\n  border: solid 2px\n    ${({ isActive, theme }) => (isActive ? theme.thick : 'transparent')};\n  border-bottom: none;\n  background-color: ${({ isActive, theme }) =>\n    isActive ? theme.thinner : 'transparent'};\n  &:hover {\n    border: solid 2px ${({ theme }) => theme.thick};\n    border-bottom: none;\n    background-color: ${({ theme }) => theme.thinner};\n  }\n  line-height: ${createSpaceSize(5)}px;\n  cursor: pointer;\n\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    font-size: ${SIZE_FONT_SMALL}px;\n    padding: 0 ${createSpaceSize(2)}px;\n  }\n`;\n\ntype Props<Menu> = {\n  menus: ReadonlyArray<Menu>;\n  currentMenu: Menu;\n  onChoice: (menu: Menu) => void;\n};\n\nconst LocalHeader = <Menu extends string>({\n  menus,\n  currentMenu,\n  onChoice,\n}: Props<Menu>) => {\n  return (\n    <StyledContainer>\n      <StyledMenu>\n        {menus.map((menu) => (\n          <StyledMenuItem\n            key={menu}\n            isActive={menu === currentMenu}\n            onClick={() => onChoice(menu)}\n          >\n            {menu}\n          </StyledMenuItem>\n        ))}\n      </StyledMenu>\n    </StyledContainer>\n  );\n};\n\nexport default LocalHeader;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledBorderText = styled.div`\n  color: ${({ theme }) => theme.thinner};\n  font-weight: bold;\n  text-shadow:\n          // 斜め4方向 1px\n    1px 1px ${({ theme }) => theme.thick},\n    1px -1px ${({ theme }) => theme.thick},\n    -1px 1px ${({ theme }) => theme.thick},\n    -1px -1px ${({ theme }) => theme.thick},\n    // 4方向 2px\n    2px 0 ${({ theme }) => theme.thick},\n    0 2px ${({ theme }) => theme.thick}, -2px 0 ${({ theme }) => theme.thick},\n    0 -2px ${({ theme }) => theme.thick},\n    // 斜め8箇所間埋め\n    2px 1px ${({ theme }) => theme.thick},\n    1px 2px ${({ theme }) => theme.thick},\n    2px -1px ${({ theme }) => theme.thick},\n    1px -2px ${({ theme }) => theme.thick},\n    -2px 1px ${({ theme }) => theme.thick},\n    -1px 2px ${({ theme }) => theme.thick},\n    -2px -1px ${({ theme }) => theme.thick},\n    -1px -2px ${({ theme }) => theme.thick};\n`;\n\nconst BorderText: React.FC = ({ children }) => (\n  <StyledBorderText>{children}</StyledBorderText>\n);\n\nexport default BorderText;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {\n  BREAK_POINT,\n  createSpaceSize,\n  MINIMUM_PIXEL_UNIT,\n  SIZE_FONT_XX_LARGE,\n} from '../../lib/styleUtils';\nimport imageAim from '../../images/choose/aim.jpg';\nimport BorderText from '../utils/BorderText';\n\nconst StyledContainer = styled.div`\n  display: flex;\n  justify-content: center;\n\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    display: block;\n  }\n`;\n\nconst StyledCharacterImage = styled.img`\n  display: block;\n  width: 40%;\n  height: auto;\n\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    width: 70%;\n    min-width: 300px;\n    margin: 0 auto ${createSpaceSize(3)}px;\n  }\n`;\n\nconst StyledBodyContainer = styled.div`\n  padding: ${createSpaceSize(3)}px;\n  padding-top: 0;\n\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    padding: ${createSpaceSize(2)}px;\n    padding-top: 0;\n  }\n`;\n\nconst StyledWord = styled.p`\n  margin-bottom: ${createSpaceSize(3)}px;\n  font-size: ${SIZE_FONT_XX_LARGE}px;\n  letter-spacing: 1.2px;\n`;\nconst StyledProfile = styled.ul`\n  list-style: none;\n`;\nconst StyledProfileItem = styled.li`\n  margin-bottom: ${MINIMUM_PIXEL_UNIT}px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\ntype Props = { readyToStartAnimation: boolean };\n\nconst Profile: React.FC<Props> = () => (\n  <StyledContainer>\n    <StyledCharacterImage src={imageAim} alt=\"愛夢\" />\n    <StyledBodyContainer>\n      <BorderText>\n        <StyledWord>「ありがとう。今日もお疲れ様でした。」</StyledWord>\n      </BorderText>\n      <StyledProfile>\n        <StyledProfileItem>名前：愛夢（あいむ / Aim）</StyledProfileItem>\n        <StyledProfileItem>年齢：23歳</StyledProfileItem>\n        <StyledProfileItem>トップ - アンダー：92 - 67（G）</StyledProfileItem>\n      </StyledProfile>\n    </StyledBodyContainer>\n  </StyledContainer>\n);\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { BREAK_POINT, createSpaceSize } from '../../lib/styleUtils';\nimport SceneInOut from '../utils/SceneInOut';\nimport LocalHeader from './LocalHeader';\nimport Profile from './Profile';\n\nconst StyledLocalHeaderContainer = styled.div`\n  margin-bottom: ${createSpaceSize(5)}px;\n\n  @media screen and (max-width: ${BREAK_POINT}px) {\n    margin-bottom: ${createSpaceSize(3)}px;\n  }\n`;\n\nconst MENUS = ['紹介', '活動', 'グッズ', 'ご支援'] as const;\n\ntype Props = { backToChoice: boolean; onSceneOutForBackToChoice: () => void };\n\nconst Aim: React.FC<Props> = ({ backToChoice, onSceneOutForBackToChoice }) => {\n  const [readyToStartAnimation, setReadyToStartAnimation] = useState(false);\n  const [currentMenu, setCurrentMenu] = useState<typeof MENUS[number]>('紹介');\n  return (\n    <SceneInOut\n      readyToHide={backToChoice}\n      onSceneIn={() => setTimeout(() => setReadyToStartAnimation(true), 600)}\n      onSceneOut={() => backToChoice && onSceneOutForBackToChoice()}\n    >\n      <StyledLocalHeaderContainer>\n        <LocalHeader\n          menus={MENUS}\n          currentMenu={currentMenu}\n          onChoice={(menu) => setCurrentMenu(menu)}\n        />\n      </StyledLocalHeaderContainer>\n      {currentMenu === '紹介' && (\n        <Profile readyToStartAnimation={readyToStartAnimation} />\n      )}\n      {currentMenu === '活動' && <p>大人の本、絶賛製作中！！</p>}\n      {currentMenu === 'グッズ' && <p>pixivFACTORY にて販売開始予定！！</p>}\n      {currentMenu === 'ご支援' && (\n        <p>pixivFANBOX にて愛夢応援専用プラン公開予定！！</p>\n      )}\n    </SceneInOut>\n  );\n};\n\nexport default Aim;\n","import React, { useState } from 'react';\nimport 'ress';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport baseTheme from './theme/gray.json';\nimport aimTheme from './theme/aim.json';\nimport Header from './components/Header';\nimport Body from './components/Body';\nimport ChooseCharacter from './components/chooseCharacter/ChooseCharacter';\nimport Aim from './components/aim/Aim';\nimport { SIZE_FONT_MEDIUM } from './lib/styleUtils';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family:'ヒラギノ丸ゴ Pro W4','ヒラギノ丸ゴ Pro','Hiragino Maru Gothic Pro','ヒラギノ角ゴ Pro W3','Hiragino Kaku Gothic Pro','HG丸ｺﾞｼｯｸM-PRO','HGMaruGothicMPRO';\n    background-color: ${baseTheme.thinner};\n    color: ${baseTheme.thick};\n    font-size: ${SIZE_FONT_MEDIUM}px;\n  }\n`;\n\nconst CHARACTER_THEMES = {\n  aim: aimTheme,\n};\n\ntype Scene = 'choice' | 'aim';\n\nconst getCharacterName = (scene: Scene) => {\n  switch (scene) {\n    case 'aim':\n      return 'あいむ';\n    case 'choice':\n      return undefined;\n  }\n};\n\nconst App: React.FC = () => {\n  const [theme, setTheme] = useState<typeof baseTheme>(baseTheme);\n  const [scene, setScene] = useState<Scene>('choice');\n  const [backToChoice, setBackToChoice] = useState(false);\n  return (\n    <div>\n      <GlobalStyle />\n      <ThemeProvider theme={theme}>\n        <Header\n          characterName={getCharacterName(scene)}\n          onPressTitle={() => {\n            setBackToChoice(true);\n          }}\n        />\n        <Body>\n          {scene === 'choice' && (\n            <ChooseCharacter\n              onSelected={(character) => {\n                setTheme(CHARACTER_THEMES[character]);\n                setScene(character);\n              }}\n            />\n          )}\n          {scene === 'aim' && (\n            <Aim\n              backToChoice={backToChoice}\n              onSceneOutForBackToChoice={() => {\n                setTheme(baseTheme);\n                setScene('choice');\n                setBackToChoice(false);\n              }}\n            />\n          )}\n        </Body>\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n};\n\n(() => {\n  const startLoadingTime = Date.now();\n  window.addEventListener('load', () => {\n    setTimeout(function () {\n      const loading = document.querySelector<HTMLDivElement>('#loading');\n      if (!loading) {\n        renderApp();\n        return;\n      }\n\n      loading.style.opacity = '0';\n      loading.addEventListener('transitionend', () => {\n        loading.remove();\n        renderApp();\n      });\n    }, Math.max(1000 - (Date.now() - startLoadingTime), 0));\n  });\n})();\n"],"sourceRoot":""}